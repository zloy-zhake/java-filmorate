-- Drop tables in reverse dependency order
--DROP TABLE IF EXISTS likes;
--DROP TABLE IF EXISTS filmsMpaRatings;
--DROP TABLE IF EXISTS filmsGenres;
--DROP TABLE IF EXISTS friendships;
--DROP TABLE IF EXISTS mpaRatings;
--DROP TABLE IF EXISTS genres;
--DROP TABLE IF EXISTS films;
--DROP TABLE IF EXISTS users;

CREATE TABLE IF NOT EXISTS users (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email varchar UNIQUE,
  login varchar UNIQUE NOT NULL,
  name varchar,
  birthday date
);

CREATE TABLE IF NOT EXISTS friendships (
  friendFrom integer NOT NULL,
  friendTo integer NOT NULL,
  acceptanceStatus varchar DEFAULT false,
  PRIMARY KEY (friendFrom, friendTo)
);

CREATE TABLE IF NOT EXISTS films (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar NOT NULL,
  description text,
  releaseDate date,
  duration integer
);

CREATE TABLE IF NOT EXISTS genres (
  id integer PRIMARY KEY,
  genre varchar UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS filmsGenres (
  filmId integer NOT NULL,
  genreId integer NOT NULL,
  PRIMARY KEY (filmId, genreId)
);

CREATE TABLE IF NOT EXISTS mpaRatings (
  id integer PRIMARY KEY,
  rating varchar UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS filmsMpaRatings (
  filmId integer NOT NULL,
  ratingId integer NOT NULL,
  PRIMARY KEY (filmId, ratingId)
);

CREATE TABLE IF NOT EXISTS likes (
  userId integer NOT NULL,
  filmId integer NOT NULL,
  PRIMARY KEY (userId, filmId)
);

ALTER TABLE friendships ADD FOREIGN KEY (friendFrom) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE friendships ADD FOREIGN KEY (friendTo) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE filmsGenres ADD FOREIGN KEY (filmId) REFERENCES films (id) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE filmsGenres ADD FOREIGN KEY (genreId) REFERENCES genres (id) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE filmsMpaRatings ADD FOREIGN KEY (filmId) REFERENCES films (id) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE filmsMpaRatings ADD FOREIGN KEY (ratingId) REFERENCES mpaRatings (id) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE likes ADD FOREIGN KEY (userId) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE likes ADD FOREIGN KEY (filmId) REFERENCES films (id) ON DELETE CASCADE ON UPDATE CASCADE;
